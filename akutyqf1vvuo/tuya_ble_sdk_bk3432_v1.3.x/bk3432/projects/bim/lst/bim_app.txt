; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --thumb --list --debug -c --asm --interleave -o.\obj\bim_app.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\bim_app.d --cpu=ARM9E --apcs=interwork -O3 --diag_suppress=9931 -I.\config -I.\app -I..\..\libs -I..\..\sdk\plactform\core_modules\src -I..\..\sdk\plactform\arch -I..\..\sdk\plactform\arch\compiler -I..\..\sdk\plactform\arch\ll -I..\..\sdk\plactform\core_modules\common\api -I..\..\sdk\plactform\arch\boot -I..\..\sdk\plactform\core_modules\dbg\api -I..\..\sdk\plactform\core_modules\rf\api -I..\..\sdk\plactform\core_modules\ecc_p256\api -I..\..\sdk\plactform\arch\main -I..\..\sdk\plactform\core_modules\util -I..\..\sdk\plactform\driver\pwm -I..\..\sdk\plactform\driver\adc -I..\..\sdk\plactform\driver\audio -I..\..\sdk\plactform\driver\wdt -I..\..\sdk\plactform\driver\rtc -I..\..\sdk\plactform\driver\i2c -I..\..\sdk\plactform\driver\utc -I..\..\sdk\plactform\driver\ir -I..\..\sdk\plactform\driver\spi -I..\..\sdk\plactform\driver\plf -I..\..\sdk\plactform\driver\counter -I..\..\sdk\plactform\driver\gpio -I..\..\sdk\plactform\driver\intcntl -I..\..\sdk\plactform\driver\icu -I..\..\sdk\plactform\driver\intc -I..\..\sdk\plactform\driver\flash -I..\..\sdk\plactform\driver\timer -I..\..\sdk\plactform\driver\reg -I..\..\sdk\plactform\driver\uart -I..\..\sdk\plactform\driver\emi -I..\..\sdk\ble_stack\com\rwble -I..\..\sdk\ble_stack\com\rwble_hl -I..\..\sdk\ble_stack\com\rwble -I..\..\sdk\ble_stack\com\rwip\api -I..\..\sdk\ble_stack\com\rwble_hl -I..\..\sdk\ble_stack\src -I..\..\sdk\plactform\reg -I..\..\sdk\plactform\driver\syscntl -I..\..\sdk\plactform\rom\hci -I..\..\sdk\plactform\core_modules\ecc_p256\api -I..\..\sdk\ble_stack\inc -I..\..\sdk\ble_stack\inc\hci -I..\..\sdk\ble_stack\inc\h4tl -I..\..\sdk\ble_stack\inc\ke -I..\..\sdk\ble_stack\inc\nvds -I..\..\sdk\ble_stack\inc\ea -I..\..\sdk\ble_stack\inc\em -I..\..\sdk\ble_stack\inc\ahi -I..\..\sdk\ble_stack\inc\ble\hl\gap\gapc -I..\..\sdk\ble_stack\inc\ble\hl\gap\gapm -I..\..\sdk\ble_stack\inc\ble\hl\gap\smpc -I..\..\sdk\ble_stack\inc\ble\hl\gap\smpm -I..\..\sdk\ble_stack\inc\ble\hl\gatt\attc -I..\..\sdk\ble_stack\inc\ble\hl\gatt\attm -I..\..\sdk\ble_stack\inc\ble\hl\gatt\atts -I..\..\sdk\ble_stack\inc\ble\hl\gatt\gattc -I..\..\sdk\ble_stack\inc\ble\hl\gatt\gattm -I..\..\sdk\ble_stack\inc\ble\hl\l2c\l2cc -I..\..\sdk\ble_stack\inc\ble\hl\l2c\l2cm -I..\..\sdk\ble_stack\inc\ble\ll\em -I..\..\sdk\ble_stack\inc\ble\ll\llc -I..\..\sdk\ble_stack\inc\ble\ll\lld -I..\..\sdk\ble_stack\inc\ble\ll\llm -I..\..\sdk\ble_stack\com\rwip\api -I..\..\sdk\ble_stack\inc\ble\hl\gap -I..\..\sdk\ble_stack\inc\ble\hl\gatt -I..\..\sdk\ble_stack\com\prf -I..\..\sdk\ble_stack\com\profiles\dis\diss\src -I..\..\sdk\ble_stack\com\profiles\bas\bass\src -I..\..\sdk\ble_stack\com\profiles\ancs\ancsc\api -I..\..\sdk\ble_stack\com\profiles\ancs\ancsc\src -I..\..\sdk\ble_stack\com\profiles\ancs -I..\..\sdk\ble_stack\com\profiles\FCC0\api -I..\..\sdk\ble_stack\com\profiles\FCC0\src -I..\..\sdk\ble_stack\com\profiles\FCC0\util -I..\..\sdk\ble_stack\com\profiles\FEE0\api -I..\..\sdk\ble_stack\com\profiles\FEE0\src -I..\..\sdk\ble_stack\com\profiles\hogp -I..\..\sdk\ble_stack\com\profiles\hogp\hogpd\api -I..\..\sdk\ble_stack\com\profiles\hogp\hogpd\src -I..\..\libs -I..\..\sdk\ble_stack\com\profiles\wechat\api -I..\..\sdk\ble_stack\com\profiles\wechat\src -I.\wechat -I..\..\sdk\ble_stack\com\profiles\bas\bass -I..\..\sdk\ble_stack\com\profiles\bas\bass\api -I..\..\sdk\ble_stack\com\profiles\dis\diss -I..\..\sdk\ble_stack\com\profiles\dis\diss\api -I..\..\sdk\ble_stack\com\profiles\FFF0\api -I..\..\sdk\ble_stack\com\profiles\FFF0 -I..\..\sdk\ble_stack\com\profiles\oad\api -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=532 --omf_browse=.\obj\bim_app.crf app\bim_app.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  updata_memset32 PROC
;;;13     
;;;14     void  updata_memset32(void * dest, uint32_t value, uint32_t size)
000000  0112              LSLS     r2,r2,#4
;;;15     {
;;;16     	uint32_t *_u8_dest = (uint32_t *)dest;
;;;17     	uint32_t *_u8_end  = (uint32_t *)dest+size*4;
000002  1812              ADDS     r2,r2,r0
000004  e000              B        |L1.8|
                  |L1.6|
;;;18     
;;;19     	while (_u8_dest < _u8_end)
;;;20     	{
;;;21     		*_u8_dest++ = value;
000006  c002              STM      r0!,{r1}
                  |L1.8|
000008  4290              CMP      r0,r2                 ;19
00000a  d3fc              BCC      |L1.6|
;;;22     	}
;;;23     
;;;24     }
00000c  4770              BX       lr
;;;25     
                          ENDP

                  bim_icu_init PROC
;;;26     
;;;27     void bim_icu_init(uint8_t clk)
00000e  483f              LDR      r0,|L1.268|
;;;28     {
;;;29     	REG_AHB0_ICU_FLASH &= ~(0xff << 16);
000010  68c1              LDR      r1,[r0,#0xc]
000012  22ff              MOVS     r2,#0xff
000014  0412              LSLS     r2,r2,#16
000016  4391              BICS     r1,r1,r2
000018  60c1              STR      r1,[r0,#0xc]
;;;30     	REG_AHB0_ICU_FLASH |= (0x15 << 16);
00001a  68c1              LDR      r1,[r0,#0xc]
00001c  2215              MOVS     r2,#0x15
00001e  0412              LSLS     r2,r2,#16
000020  4311              ORRS     r1,r1,r2
000022  60c1              STR      r1,[r0,#0xc]
;;;31     	REG_AHB0_ICU_CPU_STATUS  = 0x771;
000024  4a3a              LDR      r2,|L1.272|
000026  0441              LSLS     r1,r0,#17
000028  638a              STR      r2,[r1,#0x38]
;;;32     
;;;33     	REG_AHB0_ICU_DIGITAL_PWD = REG_AHB0_ICU_DIGITAL_PWD & (~0X02);
00002a  69c2              LDR      r2,[r0,#0x1c]
00002c  2302              MOVS     r3,#2
00002e  439a              BICS     r2,r2,r3
000030  61c2              STR      r2,[r0,#0x1c]
;;;34     
;;;35     	REG_AHB0_ICU_CORECLKCON = 0X00;  //clk div 0
000032  2000              MOVS     r0,#0
000034  6048              STR      r0,[r1,#4]
;;;36     
;;;37     	REG_AHB0_ICU_CLKSRCSEL = 0X000001F9; //usr 16m, sel=0, dec=7,normal=7
000036  20ff              MOVS     r0,#0xff
000038  30fa              ADDS     r0,r0,#0xfa
00003a  6008              STR      r0,[r1,#0]
;;;38     
;;;39     	REG_AHB0_ICU_ANA_CTL &= ~(0X01 << 6);
00003c  6b48              LDR      r0,[r1,#0x34]
00003e  2240              MOVS     r2,#0x40
000040  4390              BICS     r0,r0,r2
000042  6348              STR      r0,[r1,#0x34]
;;;40     	
;;;41     }
000044  4770              BX       lr
;;;42     
                          ENDP

                  bim_main PROC
;;;45     
;;;46     void bim_main(void)
000046  b5f8              PUSH     {r3-r7,lr}
;;;47     {
;;;48     	extern uint16_t uart_buff_write;
;;;49     	extern uint8_t bim_uart_rx_buf[BIM_UART0_RX_FIFO_MAX_COUNT];
;;;50     	extern uint8_t uart_download_status;
;;;51     
;;;52     	static uint16_t bim_uart_temp,uart_buff_read;
;;;53     	static int32_t  check_cnt=0;
;;;54     	static uint8_t read_buf[16];
;;;55     	static uint16_t rom_ver;
;;;56     
;;;57     	int32_t main_point = SEC_IMAGE_RUN_STACK_FADDR;
;;;58     
;;;59     	updata_memset32((uint8_t *)0x00400000, 1, 1);
000048  2201              MOVS     r2,#1
00004a  2681              MOVS     r6,#0x81              ;57
00004c  0176              LSLS     r6,r6,#5              ;57
00004e  0011              MOVS     r1,r2
000050  0590              LSLS     r0,r2,#22
000052  f7fffffe          BL       updata_memset32
;;;60     
;;;61     	bim_icu_init(ICU_CLK_16M);
000056  2000              MOVS     r0,#0
000058  f7fffffe          BL       bim_icu_init
;;;62     
;;;63     	bim_flash_init();
00005c  f7fffffe          BL       bim_flash_init
;;;64     
;;;65     	bim_uart_init(115200);
000060  20e1              MOVS     r0,#0xe1
000062  0240              LSLS     r0,r0,#9
000064  f7fffffe          BL       bim_uart_init
;;;66     
;;;67     	bim_flash_read(FLASH_SPACE_TYPE_MAIN, SEC_IMAGE_OAD_HEADER_STACK_FADDR/4, 16, read_buf);
000068  4b2a              LDR      r3,|L1.276|
00006a  492b              LDR      r1,|L1.280|
00006c  2210              MOVS     r2,#0x10
00006e  2000              MOVS     r0,#0
000070  f7fffffe          BL       bim_flash_read
;;;68     
;;;69     	rom_ver = ( read_buf[14]|(read_buf[15]<<8) );
000074  4827              LDR      r0,|L1.276|
000076  4c29              LDR      r4,|L1.284|
000078  7b81              LDRB     r1,[r0,#0xe]  ; read_buf
00007a  7bc0              LDRB     r0,[r0,#0xf]  ; read_buf
;;;70     
;;;71     	REG_AHB0_ICU_INT_ENABLE = (0x01 << 5);
00007c  4d23              LDR      r5,|L1.268|
00007e  0200              LSLS     r0,r0,#8              ;69
000080  4301              ORRS     r1,r1,r0              ;69
000082  2020              MOVS     r0,#0x20
000084  80a1              STRH     r1,[r4,#4]            ;69
000086  6028              STR      r0,[r5,#0]
;;;72     	REG_AHB0_ICU_IRQ_ENABLE = 0x03;
000088  2003              MOVS     r0,#3
00008a  6068              STR      r0,[r5,#4]
;;;73     	__enable_irq();
00008c  f7fffffe          BL       __ARM_common_enable_irq
;;;74     
;;;75     	//bim_uart_write("boot start\r\n");
;;;76     	//REG_APB5_GPIOD_CFG = 0Xff;
;;;77     	//REG_APB5_GPIOD_DATA = 0X00;
;;;78     
;;;79     	while(1)
;;;80     	{
;;;81     
;;;82     		bim_uart_temp=uart_buff_write;
000090  4f23              LDR      r7,|L1.288|
                  |L1.146|
000092  8839              LDRH     r1,[r7,#0]  ; uart_buff_write
000094  8021              STRH     r1,[r4,#0]
;;;83     		if (uart_buff_read < bim_uart_temp)
000096  8860              LDRH     r0,[r4,#2]  ; uart_buff_read
000098  4288              CMP      r0,r1
00009a  d205              BCS      |L1.168|
;;;84     		{
;;;85     			//REG_APB5_GPIOD_DATA = 0X00;
;;;86     			bim_uart_data_callback(bim_uart_rx_buf + uart_buff_read, bim_uart_temp - uart_buff_read);
00009c  1a09              SUBS     r1,r1,r0
00009e  4a21              LDR      r2,|L1.292|
0000a0  0409              LSLS     r1,r1,#16
0000a2  0c09              LSRS     r1,r1,#16
0000a4  1810              ADDS     r0,r2,r0
;;;87     			uart_buff_read = bim_uart_temp;
0000a6  e00b              B        |L1.192|
                  |L1.168|
;;;88     
;;;89     		}
;;;90     		else if (uart_buff_read > bim_uart_temp)
0000a8  4288              CMP      r0,r1
0000aa  d90e              BLS      |L1.202|
;;;91     		{
;;;92     			bim_uart_data_callback(bim_uart_rx_buf + uart_buff_read, sizeof(bim_uart_rx_buf) - uart_buff_read);
0000ac  491e              LDR      r1,|L1.296|
0000ae  4a1d              LDR      r2,|L1.292|
0000b0  1a09              SUBS     r1,r1,r0
0000b2  0409              LSLS     r1,r1,#16
0000b4  0c09              LSRS     r1,r1,#16
0000b6  1810              ADDS     r0,r2,r0
0000b8  f7fffffe          BL       bim_uart_data_callback
;;;93     			bim_uart_data_callback(bim_uart_rx_buf, bim_uart_temp);
0000bc  8821              LDRH     r1,[r4,#0]  ; bim_uart_temp
0000be  4819              LDR      r0,|L1.292|
                  |L1.192|
0000c0  f7fffffe          BL       bim_uart_data_callback
;;;94     			uart_buff_read = bim_uart_temp;
0000c4  8820              LDRH     r0,[r4,#0]  ; bim_uart_temp
0000c6  8060              STRH     r0,[r4,#2]
0000c8  e7e3              B        |L1.146|
                  |L1.202|
;;;95     			//REG_APB5_GPIOD_DATA = 0X00;
;;;96     		}
;;;97     		else
;;;98     		{
;;;99     
;;;100    			if(uart_download_status==0 && rom_ver!=0xffff)
0000ca  4818              LDR      r0,|L1.300|
0000cc  7800              LDRB     r0,[r0,#0]  ; uart_download_status
0000ce  2800              CMP      r0,#0
0000d0  d1df              BNE      |L1.146|
0000d2  88a0              LDRH     r0,[r4,#4]  ; rom_ver
0000d4  4916              LDR      r1,|L1.304|
0000d6  4288              CMP      r0,r1
0000d8  d0db              BEQ      |L1.146|
;;;101    			{
;;;102    				if(check_cnt++>50000) //30ms
0000da  68a0              LDR      r0,[r4,#8]  ; check_cnt
0000dc  1c41              ADDS     r1,r0,#1
0000de  60a1              STR      r1,[r4,#8]  ; check_cnt
0000e0  4914              LDR      r1,|L1.308|
0000e2  4288              CMP      r0,r1
0000e4  ddd5              BLE      |L1.146|
;;;103    				{
;;;104    					check_cnt=0;
0000e6  2700              MOVS     r7,#0
;;;105    					//REG_APB5_GPIOD_DATA = 0XFF;
;;;106    
;;;107    					break;
;;;108    				}
;;;109    			}
;;;110    		}
;;;111    	}
;;;112    
;;;113    	__disable_irq( );
0000e8  60a7              STR      r7,[r4,#8]  ; check_cnt
0000ea  f7fffffe          BL       __ARM_common_disable_irq
;;;114    	REG_AHB0_ICU_INT_ENABLE = 0x00;
0000ee  602f              STR      r7,[r5,#0]
;;;115    	REG_AHB0_ICU_IRQ_ENABLE = 0x00;
0000f0  606f              STR      r7,[r5,#4]
;;;116    	updata_memset32((uint8_t *)0x00400000, 0, 1);
0000f2  2201              MOVS     r2,#1
0000f4  2100              MOVS     r1,#0
0000f6  0590              LSLS     r0,r2,#22
0000f8  f7fffffe          BL       updata_memset32
;;;117    	bim_uart_deinit();
0000fc  f7fffffe          BL       bim_uart_deinit
;;;118    
;;;119    	if(1 == bim_select_sec())
000100  f7fffffe          BL       bim_select_sec
000104  2801              CMP      r0,#1
000106  d100              BNE      |L1.266|
;;;120    	{
;;;121    		//bim_uart_write("image-main_RUN ADDR = 0x2010\r\n");
;;;122    		(*(FUNCPTR)main_point)();
000108  47b0              BLX      r6
                  |L1.266|
;;;123    	}
;;;124    
;;;125    
;;;126    }
00010a  bdf8              POP      {r3-r7,pc}
;;;127    
                          ENDP

                  |L1.268|
                          DCD      0x00800040
                  |L1.272|
                          DCD      0x00000771
                  |L1.276|
                          DCD      ||.bss||
                  |L1.280|
                          DCD      0x00000404
                  |L1.284|
                          DCD      ||.data||
                  |L1.288|
                          DCD      uart_buff_write
                  |L1.292|
                          DCD      bim_uart_rx_buf
                  |L1.296|
                          DCD      0x00002004
                  |L1.300|
                          DCD      uart_download_status
                  |L1.304|
                          DCD      0x0000ffff
                  |L1.308|
                          DCD      0x0000c350

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  read_buf
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  bim_uart_temp
000000  0000              DCB      0x00,0x00
                  uart_buff_read
000002  0000              DCB      0x00,0x00
                  rom_ver
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  check_cnt
                          DCD      0x00000000

                          AREA ||i.__ARM_common_disable_irq||, COMGROUP=__ARM_common_disable_irq, CODE, READONLY, ALIGN=2

                          ARM
                  __ARM_common_disable_irq PROC
000000  e10f0000          MRS      r0,APSR ; formerly CPSR
000004  e3801080          ORR      r1,r0,#0x80
000008  e121f001          MSR      CPSR_c,r1
00000c  e2000080          AND      r0,r0,#0x80
000010  e12fff1e          BX       lr
                          ENDP


                          AREA ||i.__ARM_common_enable_irq||, COMGROUP=__ARM_common_enable_irq, CODE, READONLY, ALIGN=2

                  __ARM_common_enable_irq PROC
000000  e10f0000          MRS      r0,APSR ; formerly CPSR
000004  e3c00080          BIC      r0,r0,#0x80
000008  e121f000          MSR      CPSR_c,r0
00000c  e12fff1e          BX       lr
                          ENDP

